int x[] = {1, -1, 0, 0};
int y[] = {0, 0, 1, -1};

void dfschk(char** grid, int i, int j, int rows, int cols) {
    if (i < 0 || j < 0 || i >= rows || j >= cols || grid[i][j] != '1')
        return;
    grid[i][j] = '0';

    for (int s = 0; s < 4; s++) {
        int newRow = i + x[s];
        int newCol = j + y[s];
        dfschk(grid, newRow, newCol, rows, cols);
    }
}


int numIslands(char** grid, int gridSize, int* gridColSize) {
    if (grid == NULL || gridSize == 0 || gridColSize == NULL)
        return 0;
    int count = 0;

    for (int i = 0; i < gridSize; i++) {
        for (int j = 0; j < gridColSize[i]; j++) {
            if (grid[i][j] == '1') {
                count++;
                dfschk(grid, i, j, gridSize, gridColSize[i]);
            }
        }
    }
    return count;
}
